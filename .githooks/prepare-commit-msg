#!/bin/bash

# This hook adds the GitHub issue ID from branch name to every commit.
COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

case "$COMMIT_SOURCE,$SHA1" in
  ,|template,)
    /usr/bin/perl -i.bak -pe '
       print "\n" . `git diff --cached --name-status -r`
     if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
  *) ;;
esac

# get current branch
branchName=$(git rev-parse --abbrev-ref HEAD)
REGEX_PREFIX="dependabot|feature|issue|major|minor|patch|hotfix|release"

# search GitHub issue id in a pattern such a "feature/123-description" or "123-description"
issueId=$(echo "$branchName" | sed -e 's/^\([^-]*\)-.*/\1/' -e "s/[$REGEX_PREFIX]//g" -e 's/\///g')

# only prepare commit message if pattern matched and issueId was found
if [ -n "$issueId" ]; then
  matches=$(head -n1 "$COMMIT_MSG_FILE" | grep -c "\[$issueId\]")

  # only add the GitHub issue, if it is not already there.
  if [ "$matches" = "0" ]; then # textual match, because numeric "error string" -eq 0 is true

    sed -i.bak -e "1s/^/\[#$issueId\] /" "$COMMIT_MSG_FILE"
  fi
fi
